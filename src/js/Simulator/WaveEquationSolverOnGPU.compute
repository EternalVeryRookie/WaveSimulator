#version 310 es
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (std430, binding = 0) buffer SSBO {
    float data[];
} nowPoints;

layout (std430, binding = 1) buffer SSBO1 {
    float data[];
} prePoints;

layout (std430, binding = 2) buffer SSBO3 {
    float data[];
} params;


float solve(uint x, uint y, float dt, float c, float dx, float dy) {
    uint index = x + y * (gl_NumWorkGroups.x + uint(2));
    float preZ = prePoints.data[index];
    float cSquare = c * c;
    float dtSquare = dt * dt;
    float dxSquare = dx * dx;
    float dySquare = dy * dy;
    uint leftxIdx = x-uint(1) + y * (gl_NumWorkGroups.x + uint(2));
    uint rightxIdx = (x+uint(1)) + y * (gl_NumWorkGroups.x + uint(2));
    uint upyIdx = x + (y-uint(1)) * (gl_NumWorkGroups.x + uint(2));
    uint downyIdx = x + (y+uint(1)) * (gl_NumWorkGroups.x + uint(2));

    float i = cSquare * (dtSquare / dxSquare) * (nowPoints.data[rightxIdx] + nowPoints.data[leftxIdx] - 2.0 * nowPoints.data[index]);
    float j = cSquare * (dtSquare / dySquare) * (nowPoints.data[downyIdx] + nowPoints.data[upyIdx] - 2.0 * nowPoints.data[index]);
    float k = 2.0 * nowPoints.data[index] - preZ;

    return i + j + k;
}

void main() {
    // 時刻t-1 の時点での高さ情報を記憶しているバッファに計算結果を格納する。
    // 時刻t の時点での高さ情報はt+1 を計算する際に周辺情報が必要になるため時刻t のバッファには計算結果を保存できない。
    // 境界でのif文を避けるためにxとyのWorkGroup数をそれぞれresoX-2, resoY-2にする。
    // 実際のインデックスにアクセスする際はgl_WorkGroupIDに1を足してからアクセスする。
    // こうすることによりGPU内での境界へのアクセスを防ぎ、分岐をなくす。

    uint x = gl_WorkGroupID.x + uint(1);
    uint y = gl_WorkGroupID.y + uint(1);
    uint index = x + y * (gl_NumWorkGroups.x + uint(2));
    float c = params.data[0];
    float dt = params.data[1];
    float dx = params.data[2];
    float dy = params.data[3];

    prePoints.data[index] = solve(x, y, dt, c, dx, dy);               
}
